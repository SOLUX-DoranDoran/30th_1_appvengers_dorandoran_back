server:
  port: 8080
  address: 0.0.0.0
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

spring:
  profiles:
    active: test, aws  # local, test, dev, aws
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: profile, email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope: name, email
            client-name: naver
            authorization-grant-type: authorization_code
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://dorandoran.c9k4kmy4m3sd.ap-northeast-2.rds.amazonaws.com:3306/dorandoran?useSSL=false&serverTimezone=Asia/Seoul
    username: doran
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  config:
    import: optional:file:.env[.properties]

jwt:
  secret: ${JWT_SECRET}

app:
  oauth2:
    redirect-base-url: "http://ec2-15-164-40-185.ap-northeast-2.compute.amazonaws.com:8080/api/auth/test"

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}
    s3:
      bucket: doran-profile-bucket
    stack.auto: false
    region:
      static: ap-northeast-2
      auto: false
